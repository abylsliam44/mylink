version: '3.9'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: smartbot_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/smartbot_db
      DATABASE_URL_SYNC: postgresql://postgres:postgres@db:5432/smartbot_db
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: your-secret-key-change-this-in-production
      DEBUG: "True"
      ALLOWED_ORIGINS: http://localhost:8011
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: ${OPENAI_MODEL:-gpt-4.1}
    ports:
      - "8010:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
    environment:
      VITE_API_URL: http://localhost:8010
    ports:
      - "8011:5173"
    # Temporarily disabled volume mount to force use of built image
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules
    command: sh -c "npm ci && npm run dev -- --host 0.0.0.0 --port 5173"
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:

