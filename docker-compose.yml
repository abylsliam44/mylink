version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: smartbot-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: smartbot_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: smartbot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: smartbot-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:6333/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # n8n Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: smartbot-n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
      - GENERIC_TIMEZONE=Asia/Almaty
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=smartbot123
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend (FastAPI + Autonomous Agents)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smartbot-backend
    ports:
      - "8000:8000"
    environment:
      # Database
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@postgres:5432/smartbot_db
      DATABASE_URL_SYNC: postgresql://postgres:postgres@postgres:5432/smartbot_db
      
      # Redis
      REDIS_URL: redis://redis:6379/0
      
      # Qdrant
      QDRANT_HOST: qdrant
      QDRANT_PORT: 6333
      QDRANT_URL: http://qdrant:6333
      
      # OpenAI (set your key)
      OPENAI_API_KEY: ${OPENAI_API_KEY:-sk-your-key-here}
      OPENAI_MODEL: gpt-4o-mini
      OPENAI_TIMEOUT: 30
      OPENAI_MAX_RETRIES: 2
      
      # Auth
      SECRET_KEY: local-dev-secret-key-change-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      
      # App
      DEBUG: "True"
      ALLOWED_ORIGINS: http://localhost:5173,http://localhost:3000,http://localhost:8000
      ALLOWED_ORIGIN_REGEX: "null"
      
      # AI Policy
      AI_APPROVAL_THRESHOLD: 70
      AI_MAX_QUESTIONS: 3
      AI_TONE: professional
      
      # Autonomous Agents
      AGENT_HEALTH_CHECK_INTERVAL: 30
      AGENT_MAX_RETRIES: 3
      AGENT_QUEUE_SIZE: 1000
      
      # n8n Integration
      N8N_WEBHOOK_URL: http://n8n:5678/webhook
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started
    command: >
      sh -c "
        echo 'üîÑ Running database migrations...'
        alembic upgrade head || echo '‚ö†Ô∏è Migration failed, continuing...'
        echo 'üöÄ Starting FastAPI with 4 Autonomous Agents...'
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (React + Vite) - Optional
  # Uncomment if you want to run frontend in Docker too
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: smartbot-frontend
  #   ports:
  #     - "5173:5173"
  #   environment:
  #     - VITE_API_URL=http://localhost:8000
  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #   command: npm run dev -- --host 0.0.0.0
  #   depends_on:
  #     - backend

volumes:
  postgres_data:
  redis_data:
  qdrant_data:
  n8n_data:

networks:
  default:
    name: smartbot-network
